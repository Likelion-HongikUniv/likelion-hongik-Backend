buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.recruit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache' // 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-security' //Oauth 관련
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.6.2' //Oauth 관련
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'//s3용


	//jwt 관련
	implementation "io.jsonwebtoken:jjwt:0.9.1"

	// https://mvnrepository.com/artifact/org.webjars/jquery
	implementation group: 'org.webjars', name: 'jquery', version: '3.5.1'

	// https://mvnrepository.com/artifact/org.webjars/bootstrap
	implementation group: 'org.webjars', name: 'bootstrap', version: '4.6.0'

	// https://mvnrepository.com/artifact/org.webjars/webjars-locator-core
	implementation group: 'org.webjars', name: 'webjars-locator-core', version: '0.46'

	// https://mvnrepository.com/artifact/org.webjars/js-cookie
	implementation group: 'org.webjars', name: 'js-cookie', version: '2.1.0'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}